{"version":3,"sources":["ItemTypes.js","components/AddRowButtonWrapper.js","components/styleVars.js","components/AddRowButton.js","components/AddColumnButtonWrapper.js","components/AddColumnButton.js","components/Wrapper.js","components/DeleteRowButtonWrapper.js","components/DeleteRowButton.js","components/DeleteColumnButtonWrapper.js","components/DeleteColumnButton.js","components/Td.js","components/TableStyle.js","components/Table.js","App.js","Box.js","Container.jsx","index.js"],"names":["AddRowButtonWrapper","styled","div","buttonSize","AddRowButton","addRow","onClick","style","AddColumnButtonWrapper","AddColumnButton","addColumn","Wrapper","DeleteRowButtonWrapper","theme","isDeleteRowButtonHidden","rowIndex","cellSize","DeleteRowButton","DeleteColumnButtonWrapper","isDeleteColumnButtonHidden","colIndex","DeleteColumnButton","Td","td","TableStyle","table","generateRow","width","arrTrs","Array","j","length","Math","random","rowId","cells","Table","initialWidth","initialHeight","useState","height","i","push","generateTable","setTable","activeColIndex","setActiveColIndex","activeRowIndex","setActiveRowIndex","setDeleteRowButtonHidden","setDeleteColumnButtonHidden","tableWidth","setTableWidth","tableHeight","setTableHeight","useEffect","isOnlyOneRow","isOnlyOneColumn","every","onMouseEnter","map","tr","targetRowIndex","key","value","targetColumnIndex","onMouseOver","id","el","row","filter","_","Wrapper2","App","position","border","backgroundColor","padding","cursor","Box","left","top","useDrag","item","type","ItemTypes","collect","monitor","isDragging","drag","ref","styles","margin","Container","a","boxes","setBoxes","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","round","x","y","moveBox","update","$merge","Object","keys","className","DndProvider","backend","Backend","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d363e3b.chunk.js","sourcesContent":["export default {\n    BOX: 'box',\n}","import styled from 'styled-components';\nimport {\n  buttonSize, \n  buttonSizePX,\n  backgroundColorInAddButton,\n  spaceBetweenTableAndButtons,\n} from './styleVars';\n\nconst AddRowButtonWrapper = styled.div`\n  width: ${buttonSizePX};\n  height: ${buttonSizePX};\n  position: absolute;\n  bottom: ${spaceBetweenTableAndButtons};\n  left: ${buttonSize + 1}px;\n  border: none;\n  color: white;\n  transition: opacity 1s, transform 0.5s;\n  background-color: ${backgroundColorInAddButton};\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport default AddRowButtonWrapper;\n","export const cellSizePX = `48px`;\nexport const buttonSizePX = `48px`;\nexport const buttonSize = 48;\nexport const backgroundColorInAddButton = `#f4a400`;\nexport const backgroundColorMinusButton = `#b10000`;\nexport const spaceBetweenTableAndButtons = `-2px`;\nexport const mainColor = `#4aaae7`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { buttonSizePX } from './styleVars';\n\nconst AddRowButton = ({ addRow }) => (\n  <div\n    onClick={addRow}\n    style={\n      {\n        \"height\": `${buttonSizePX}`,\n        \"textAlign\": \"center\",\n        \"lineHeight\": `${buttonSizePX}`\n      }\n    }\n  >\n    +\n  </div>\n)\n\nAddRowButton.propTypes = {\n  addRow: PropTypes.func.isRequired,\n};\n\nexport default AddRowButton;","import styled from 'styled-components';\nimport {\n  buttonSize, \n  buttonSizePX, \n  backgroundColorInAddButton,\n  spaceBetweenTableAndButtons \n} from './styleVars';\n\nconst AddColumnButtonWrapper = styled.div`\n  width: ${buttonSizePX};\n  height: ${buttonSizePX};\n  position: absolute;\n  border: none;\n  color: white;\n  transition: opacity 1s, transform 0.5s;\n  background-color: ${backgroundColorInAddButton};\n  top: ${buttonSize + 1}px;\n  right: ${spaceBetweenTableAndButtons};\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport default AddColumnButtonWrapper;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { buttonSizePX } from './styleVars';\n\nconst AddColumnButton = ({ addColumn }) => (\n  <div onClick={addColumn} \n    style={ \n      {\n        \"height\": `${buttonSizePX}`,\n        \"textAlign\": \"center\", \n        \"lineHeight\": `${buttonSizePX}`\n      } \n    }\n  >\n    +\n  </div>\n)\n\nAddColumnButton.propTypes = {\n  addColumn: PropTypes.func.isRequired,\n};\n\nexport default AddColumnButton;\n","import styled from 'styled-components';\nimport { cellSizePX } from './styleVars';\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: fit-content;\n  padding: ${cellSizePX};\n`\n\nexport default Wrapper;","import styled from 'styled-components';\nimport Wrapper from '../components/Wrapper';\nimport {\n  buttonSizePX,\n  backgroundColorMinusButton,\n  spaceBetweenTableAndButtons,\n} from './styleVars';\n\nconst DeleteRowButtonWrapper = styled.div`\n  display: ${ ({ theme }) => theme.isDeleteRowButtonHidden ? 'none' : 'block' };\n\n  background-color: transparent;\n  width: ${buttonSizePX};\n  height: ${buttonSizePX};\n  position: absolute;\n  top: -2px;\n  left: ${spaceBetweenTableAndButtons};\n  border: none;\n  color: white;\n  transition: opacity 1s, transform 0.5s;\n  font-size: 28px;\n\n  transform: translateY(${ ({ theme }) => 2 + ((theme.rowIndex + 1) * theme.cellSize)}px);\n\n  ${Wrapper}:hover & {\n    background-color: ${backgroundColorMinusButton};\n  }\n  \n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\nexport default DeleteRowButtonWrapper;","import React from 'react';\nimport { buttonSizePX } from './styleVars';\n\nconst DeleteRowButton = () => (\n  <div \n    style={ \n      {\n        \"height\": `${buttonSizePX}`,\n        \"textAlign\": \"center\", \n        \"lineHeight\": `${buttonSizePX}`\n      } \n    }\n  >\n    -\n  </div>\n)\n\nexport default DeleteRowButton;","import styled from 'styled-components';\nimport Wrapper from './Wrapper';\nimport {\n  buttonSizePX,\n  backgroundColorMinusButton,\n} from './styleVars';\n\nconst DeleteColumnButtonWrapper = styled.div`\n  display: ${ ({ theme }) => theme.isDeleteColumnButtonHidden ? 'none' : 'block' };\n\n  background-color: transparent;\n  top: -2px;\n  border: none;\n  position: absolute;\n  width: ${buttonSizePX};\n  height: ${buttonSizePX};\n  color: white;\n  transition: opacity 1s, transform 0.5s;\n  font-size: 28px;\n\n  transform: translateX(${ ({ theme }) => (theme.colIndex * theme.cellSize) + 2}px);\n\n  ${Wrapper}:hover & {\n    background-color: ${backgroundColorMinusButton};\n  }\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\nexport default DeleteColumnButtonWrapper;\n","import React from 'react';\nimport { buttonSizePX } from './styleVars';\n\nconst DeleteColumnButton = () => (\n  <div \n    style={ \n      {\n        \"height\": `${buttonSizePX}`,\n        \"textAlign\": \"center\", \n        \"lineHeight\": `${buttonSizePX}`\n      } \n    }\n  >\n    -\n  </div>\n)\n\nexport default DeleteColumnButton;","import styled from 'styled-components';\nimport {\n  cellSizePX, \n  mainColor, \n} from './styleVars';\n\nconst Td = styled.td`\n  width: ${cellSizePX};\n  height: ${cellSizePX};\n  background-color: ${mainColor};\n  border: 1px solid white;\n  padding: 0;\n`\n\nexport default Td;","import styled from 'styled-components';\nimport { mainColor } from './styleVars';\n\nconst TableStyle = styled.table`\n  border-spacing: 0;\n  border: 1px solid ${mainColor};\n`\nexport default TableStyle;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\n\nimport AddRowButtonWrapper from './AddRowButtonWrapper';\nimport AddRowButton from './AddRowButton'\n\nimport AddColumnButtonWrapper from './AddColumnButtonWrapper';\nimport AddColumnButton from './AddColumnButton';\n\nimport DeleteRowButtonWrapper from './DeleteRowButtonWrapper';\nimport DeleteRowButton from './DeleteRowButton';\n\nimport DeleteColumnButtonWrapper from './DeleteColumnButtonWrapper';\nimport DeleteColumnButton from './DeleteColumnButton';\n\nimport Td from './Td';\nimport TableStyle from '../components/TableStyle';\n\nconst generateTable = (width, height) => {\n  const table = [];\n\n  for (let i = 0; i < width; i++) {\n    table.push({ rowId: i, cells: [] })\n\n    for (let j = 0; j < height; j++) {\n      table[i].cells.push(Math.random())\n    }\n  }\n\n  return table;\n}\n\nconst generateRow = (width) => {\n  let arrTrs = Array(width);\n\n  for (let j = 0; j < arrTrs.length; j++) {\n    arrTrs[j] = Math.random()\n  }\n\n  const row = { \n    rowId: Math.random(),\n    cells: arrTrs,\n  };\n\n  return row;\n}\n\nconst Table = (\n  { initialWidth, initialHeight, cellSize }\n) => {\n  const [table, setTable] = useState(generateTable(initialWidth, initialHeight));\n  const [activeColIndex, setActiveColIndex] = useState(0);\n  const [activeRowIndex, setActiveRowIndex] = useState(0);\n  const [isDeleteRowButtonHidden, setDeleteRowButtonHidden] = useState(false);\n  const [isDeleteColumnButtonHidden, setDeleteColumnButtonHidden] = useState(false);\n  const [tableWidth, setTableWidth] = useState(0);\n  const [tableHeight, setTableHeight] = useState(0);\n\n  useEffect(() => {\n    setTableWidth(table[table.length-1].cells.length);\n    setTableHeight(table.length)\n  }, [table])\n  \n  const addRow = () => {\n    setTable(\n      [...table,generateRow(tableWidth)]\n    )\n  }\n\n  const addColumn = () => {\n    setTable(\n      table.map((el) => {\n        return {\n          rowId: el.rowId,\n          cells: [...el.cells, Math.random()],\n        }\n      })\n    )\n  }\n  \n  const deleteRow = () => {    \n    setTable(\n      table.filter((_,i) => i !== activeRowIndex)\n    )\n  };\n\n  const deleteColumn = () => {\n    setTable(\n      table.map((row) => ({\n        ...row,\n        cells: row.cells.filter((_,i) => i !== activeColIndex)\n      }))\n    )\n  };\n\n  const isOnlyOneRow = () => (table.length === 1);\n  const isOnlyOneColumn = () => (table.every(({cells}) => cells.length === 1));\n\n  return (\n    <>\n      <TableStyle\n        onMouseEnter={\n          () => {\n            if(isOnlyOneRow()){\n              setDeleteRowButtonHidden(true)\n            } else {\n              setDeleteRowButtonHidden(false)\n            }\n\n            if(isOnlyOneColumn()){\n              setDeleteColumnButtonHidden(true)\n            } else {\n              setDeleteColumnButtonHidden(false)\n            }\n          }\n        }\n      >\n        <thead></thead>\n        <tbody>\n          {\n            table.map((tr, targetRowIndex) => (\n              <tr \n                key={tr.rowId}\n              >\n                {\n                  tr.cells.map((value, targetColumnIndex) => (\n                    <Td \n                      onMouseOver={\n                        () => {\n                          setActiveColIndex(targetColumnIndex);\n                          setActiveRowIndex(targetRowIndex);\n                        }\n                      }\n                      key={value}>\n                    </Td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </TableStyle>\n      \n      <AddRowButtonWrapper>\n        <AddRowButton \n          id='addRowButton' \n          addRow={addRow} \n          tableHeight={tableHeight}\n        />\n      </AddRowButtonWrapper>\n\n      <AddColumnButtonWrapper>\n            <AddColumnButton\n              id='addColumnButton' \n              addColumn={addColumn}\n              tableWidth={tableWidth}\n            >\n              +\n            </AddColumnButton>\n          </AddColumnButtonWrapper>\n        \n      <ThemeProvider theme={\n        { \n          colIndex: activeColIndex, \n          rowIndex: activeRowIndex, \n          cellSize, \n          isDeleteRowButtonHidden,\n          isDeleteColumnButtonHidden \n        }\n      } >\n\n        <DeleteColumnButtonWrapper \n          onClick={\n            ()=>{\n              deleteColumn();\n              setDeleteColumnButtonHidden(true);            \n            }\n          }\n          >\n          <DeleteColumnButton \n            id='deleteColumnButton' \n            tableWidth={tableWidth}\n            isOnlyOneColumn={isOnlyOneColumn}\n            isDeleteColumnButtonHidden={isDeleteColumnButtonHidden}\n          />\n        </DeleteColumnButtonWrapper>\n\n        <DeleteRowButtonWrapper \n          onClick={\n            ()=>{\n              deleteRow();\n              setDeleteRowButtonHidden(true);\n            }\n          }\n          >\n          <DeleteRowButton \n            id='deleteRowButton' \n            tableHeight={tableHeight}\n            isOnlyOneRow={isOnlyOneRow}\n            isDeleteRowButtonHidden={isDeleteRowButtonHidden}\n          />\n        </DeleteRowButtonWrapper>\n\n      </ThemeProvider> \n    </>\n  );\n}\n\nTable.propTypes = {\n  initialWidth: PropTypes.number.isRequired, \n  initialHeight: PropTypes.number.isRequired, \n  cellSize: PropTypes.number.isRequired,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from './components/Table';\nimport Wrapper from './components/Wrapper';\n\nconst Wrapper2 = ({ initialWidth, initialHeight, cellSize }) => (\n  <Wrapper>\n    <Table\n      initialWidth={initialWidth}\n      initialHeight={initialHeight}\n      cellSize={cellSize}\n    />\n  </Wrapper>\n)\n\nconst App = () => <>\n  <Wrapper2\n    initialWidth={4}\n    initialHeight={4}\n    cellSize={50}\n  />\n</>\n\nWrapper2.propTypes = {\n  initialWidth: PropTypes.number.isRequired, \n  initialHeight: PropTypes.number.isRequired, \n  cellSize: PropTypes.number.isRequired,\n};\n\nexport default App;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrag } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport App from './App';\n\nconst style = {\n  position: 'absolute',\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  cursor: 'move',\n}\n\nconst Box = ({ left, top }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { left, top, type: ItemTypes.BOX },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  if (isDragging) {\n    return <div ref={drag} />\n  }\n\n  return (\n    <div ref={drag} style={{ ...style, left, top }}>\n      <App />\n    </div>\n  )\n}\n\nBox.propTypes = {\n  left: PropTypes.number.isRequired,  \n  op: PropTypes.number.isRequired,\n};\n\n\nexport default Box;","import React, { useState } from 'react'\nimport { useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport Box from './Box'\nimport update from 'immutability-helper'\n\nconst styles = {\n  width: 1200,\n  height: 700,\n  border: '1px solid black',\n  position: 'relative',\n  margin: '0 auto'\n}\n\nconst Container = () => {\n  const [boxes, setBoxes] = useState({\n    a: { top: 20, left: 80 },\n  })\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.BOX,\n    drop(item, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset()\n      const left = Math.round(item.left + delta.x)\n      const top = Math.round(item.top + delta.y)\n      moveBox(left, top)\n      return undefined\n    },\n  })\n  \n  const moveBox = (left, top) => {\n    setBoxes(\n      update(boxes, {\n        a: {\n          $merge: { left, top },\n        },\n      }),\n    )\n  }\n\n  return (\n    <div ref={drop} style={styles}>\n      {\n        Object.keys(boxes).map(key => {\n          const { left, top } = boxes[key]\n          return (\n            <Box\n              key={key}\n              left={left}\n              top={top}\n            >\n            </Box>\n          )\n        })\n      }\n    </div>\n  )\n}\nexport default Container","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DndProvider } from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\nimport Container from './Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DndProvider backend={Backend}>\n        <Container />\n      </DndProvider>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)"],"sourceRoot":""}